--- Importing the data of “BoatsPG” onto the postgre sql query tool
CREATE TABLE BOATS (
REG_NUM VARCHAR(7),
YEAR NUMERIC(4),
MAKE VARCHAR(10),
LENGTH NUMERIC(4,1),
BEAM NUMERIC(3),
CONSTRAINT BOATS_PK PRIMARY KEY (REG_NUM),
CONSTRAINT BOATS_YR_CC CHECK (YEAR > 1900),
CONSTRAINT BOATS_LENGTH_CC CHECK (LENGTH > 0),
CONSTRAINT BOATS_BEAM_CC CHECK (BEAM > 0)
);
INSERT INTO BOATS VALUES ('WN123AB',1977,'Hunter',25,96);
INSERT INTO BOATS VALUES ('WN234CD',1999,'Calabria',23,103);
INSERT INTO BOATS VALUES ('WN234EF',1962,'Del Mar',16,72);
INSERT INTO BOATS VALUES ('WN456GH',1957,'Harvey',13.5,70);
INSERT INTO BOATS VALUES ('WN567IJ',1997,'Seadoo',9,46);
INSERT INTO BOATS VALUES ('WN678JL',1996,'Bayliner',47,179);



CREATE TABLE ENGINE_TYPES(
MAKE VARCHAR(12),
MODEL VARCHAR(12),
HP NUMERIC(4,1),
FUEL VARCHAR(6),
CONSTRAINT ENGINE_TYPES_PK PRIMARY KEY (MAKE, MODEL),
CONSTRAINT ENGINE_TYPES_HP_CC CHECK (HP >= 0),
CONSTRAINT ENGINE_TYPES_FUEL_CC CHECK (FUEL IN ('Gas', 'Petrol','Diesel'))
);
INSERT INTO ENGINE_TYPES VALUES ('Clinton','K990',9.9,'Gas');
INSERT INTO ENGINE_TYPES VALUES ('Mercruiser','350MagMPI',300,'Gas');
INSERT INTO ENGINE_TYPES VALUES ('Mercury','Mark30',30,'Gas');
INSERT INTO ENGINE_TYPES VALUES ('Tohatsu','M50CEPTS',50,'Gas');
INSERT INTO ENGINE_TYPES VALUES ('Rotax','720CC',85,'Gas');
INSERT INTO ENGINE_TYPES VALUES ('Hino','W06DTA',310,'Diesel');



CREATE TABLE ENGINES(
SERIAL_NUM VARCHAR(7),
YEAR NUMERIC(4),
MAKE VARCHAR(12),
MODEL VARCHAR(12),
CONSTRAINT ENGINES_PK PRIMARY KEY (SERIAL_NUM),
CONSTRAINT ENGINES_YR_CC CHECK (YEAR > 1900),
CONSTRAINT ENGINES_FK FOREIGN KEY (MAKE, MODEL) REFERENCES ENGINE_TYPES (MAKE,MODEL) ON DELETE SET NULL
);
INSERT INTO ENGINES VALUES ('C1075',1975,'Clinton','K990');
INSERT INTO ENGINES VALUES ('M30099',1999,'Mercruiser','350MagMPI');
INSERT INTO ENGINES VALUES ('M3060',1962,'Mercury','Mark30');
INSERT INTO ENGINES VALUES ('T5090',1990,'Tohatsu','M50CEPTS');
INSERT INTO ENGINES VALUES ('R8596',1997,'Rotax','720CC');
INSERT INTO ENGINES VALUES ('H31096A',1996,'Hino','W06DTA');
INSERT INTO ENGINES VALUES ('H31096B',1996,'Hino','W06DTA');



CREATE TABLE BOAT_ENGINES(
ENGINE_SERIAL_NUM VARCHAR(7),
BOAT_ID VARCHAR(7),
CONSTRAINT BOAT_ENGINES_SERIALNUM_FK FOREIGN KEY (ENGINE_SERIAL_NUM) REFERENCES ENGINES (SERIAL_NUM) ON DELETE SET NULL,
CONSTRAINT BOAT_ENGINES_BOATID_FK FOREIGN KEY (BOAT_ID) REFERENCES BOATS (REG_NUM) ON DELETE SET NULL
);
INSERT INTO BOAT_ENGINES VALUES ('C1075','WN123AB');
INSERT INTO BOAT_ENGINES VALUES ('M30099','WN234CD');
INSERT INTO BOAT_ENGINES VALUES ('M3060','WN234EF');
INSERT INTO BOAT_ENGINES VALUES ('T5090','WN456GH');
INSERT INTO BOAT_ENGINES VALUES ('R8596','WN567IJ');
INSERT INTO BOAT_ENGINES VALUES ('H31096A','WN678JL');
INSERT INTO BOAT_ENGINES VALUES ('H31096B','WN678JL');

--- SQL DDL (Boat_Registry Table)

CREATE TABLE BOAT_REGISTRY (
    CUST_ID SERIAL PRIMARY KEY,
    L_NAME VARCHAR(50),
    F_NAME VARCHAR(50),
    ADDRESS VARCHAR(255),
    ZIP VARCHAR(10),
    EMAIL VARCHAR(255),
    BALANCE NUMERIC(10, 2) CHECK (BALANCE >= 0),
    BOAT_ID VARCHAR(7),
    CONSTRAINT BOAT_REGISTRY_FK FOREIGN KEY (BOAT_ID) REFERENCES BOATS (REG_NUM) ON DELETE SET NULL
);

--- Inserting the following two records hierarchically

INSERT INTO BOAT_REGISTRY (L_NAME, F_NAME, ADDRESS, ZIP, EMAIL, BALANCE, BOAT_ID)
VALUES ('Ferrari', 'Jessica', '4790 96th St.', '10008', 'jessica@jessicaferrari.com', 1450.00, 'WN123AB');

INSERT INTO BOAT_REGISTRY (L_NAME, F_NAME, ADDRESS, ZIP, EMAIL, BALANCE, BOAT_ID)
VALUES ('Mandela', 'Bebeto', '4321 Main St.', '87919', 'bebeto@bebetomandela.com', 99.99, 'WN234CD');

--- Viewing the table

Select * from boat_registry

--- Select all the unique/distinct years within the BOATS table.

SELECT DISTINCT YEAR FROM BOATS;

--- Select all data for the boat ‘WN123AB’ from the BOATS table.

SELECT * FROM BOATS
WHERE REG_NUM = 'WN123AB';

--- 3.	Select all data for the BOATS with a ‘23’ somewhere in the REG_NUM from the BOATS table.

SELECT * FROM BOATS
WHERE REG_NUM LIKE '%23%';

--- 4. Select the BOATS that are classics (made before 1978) or large (length over 20 feet) from the BOATS table.

SELECT * FROM BOATS
WHERE YEAR < 1978 OR LENGTH > 20;

--- 5. Select all data for low power engines (ENGINE_TYPES with less than 100 HP) from the ENGINE_TYPES table.

SELECT * FROM ENGINE_TYPES
WHERE HP < 100;

--- 6. Select all data for Gas engines over 100 HP from the ENGINE_TYPES table.

SELECT * FROM ENGINE_TYPES
WHERE HP > 100 AND FUEL = 'Gas';

--- 7. Count the number of ‘Gas’ fueled engines from the ENGINE_TYPES table

SELECT COUNT(*) AS GasEngineCount
FROM ENGINE_TYPES
WHERE FUEL = 'Gas';

--- 8. Count the number of ‘Gas’ fueled engines with more than 70 HP from the ENGINE_TYPES table.

SELECT COUNT(*) AS GasEngineCount
FROM ENGINE_TYPES
WHERE FUEL = 'Gas' AND HP > 70;

--- 9. Provide the average HP of ‘Gas’ fueled engines from the ENGINE_TYPES table

SELECT AVG(HP) AS AverageHorsepower
FROM ENGINE_TYPES
WHERE FUEL = 'Gas';

--- 10. What is the average boat length?

SELECT AVG(LENGTH) AS AverageBoatLength
FROM BOATS;

--- 11. Count the boats made in the 1990s from the BOATS table.

SELECT COUNT(*) AS BoatCount
FROM BOATS
WHERE YEAR BETWEEN 1990 AND 1999

--- 12. What is the total HP for every specific ENGINE (SERIAL_NUM)?

SELECT SERIAL_NUM, SUM(et.HP) AS TotalHorsepower
FROM ENGINES e
JOIN ENGINE_TYPES et ON e.MAKE = et.MAKE AND e.MODEL = et.MODEL
GROUP BY SERIAL_NUM;

--- 13. What are the serial numbers for only the ‘Gas’ fueled engines?

SELECT e.SERIAL_NUM
FROM ENGINES e
JOIN ENGINE_TYPES et ON e.MAKE = et.MAKE AND e.MODEL = et.MODEL
WHERE et.FUEL = 'Gas';

--- 14. Which BOATS have over 100 total HP?  
SELECT b.REG_NUM, SUM(et.HP) AS TotalHorsepower
FROM BOATS b
JOIN BOAT_ENGINES be ON b.REG_NUM = be.BOAT_ID
JOIN ENGINES e ON be.ENGINE_SERIAL_NUM = e.SERIAL_NUM
JOIN ENGINE_TYPES et ON e.MAKE = et.MAKE AND e.MODEL = et.MODEL
GROUP BY b.REG_NUM
HAVING SUM(et.HP) > 100;

--- 15. Which newer full-sized BOATS (LENGTH>20 and YEAR >1990) and also have an ENGINE with over 300 HP? 

SELECT b.REG_NUM
FROM BOATS b
JOIN BOAT_ENGINES be ON b.REG_NUM = be.BOAT_ID
JOIN ENGINES e ON be.ENGINE_SERIAL_NUM = e.SERIAL_NUM
JOIN ENGINE_TYPES et ON e.MAKE = et.MAKE AND e.MODEL = et.MODEL
WHERE b.LENGTH > 20 AND b.YEAR > 1990 AND et.HP > 300;

 --- 16. Which BOATShave a LENGTH that is longer than the average boat (see the correlated subquery slides) and that are also a classic boat built before 1978.  

SELECT *
FROM BOATS b1
WHERE b1.LENGTH > (SELECT AVG(LENGTH) FROM BOATS) 
    AND b1.YEAR < 1978;

--- 17. Use a set operation (UNION, INTERSECT, or MINUS) statement to find the ENGINES (e.g., MAKE, MODEL) that use 'Gas' FUEL and were produced before 1989. 

SELECT MAKE, MODEL
FROM ENGINE_TYPES
WHERE FUEL = 'Gas'
UNION
SELECT et.MAKE, et.MODEL
FROM ENGINES e
JOIN ENGINE_TYPES et ON e.MAKE = et.MAKE AND e.MODEL = et.MODEL
WHERE et.FUEL = 'Gas' AND e.YEAR < 1989;

--- 18. Update each ‘Gas’ fuel type to ‘Petrol’ in the ENGINE_TYPES table

UPDATE ENGINE_TYPES
SET FUEL = 'Petrol'
WHERE FUEL = 'Gas';

Select * from engine_types

--- 19. Delete boat ‘WN123AB’ from the BOATS table

DELETE FROM BOATS
WHERE REG_NUM = 'WN123AB';

SELECT * FROM BOATS

--- 20. Create a view that contains only the ENGINE_TYPES records (i.e., rows) that run on ‘Petrol’.

CREATE VIEW PetrolEnginesView AS
SELECT *
FROM ENGINE_TYPES
WHERE FUEL = 'Petrol';

SELECT * FROM ENGINE_TYPES